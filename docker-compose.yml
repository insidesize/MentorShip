services:
  fastapi_app:
    build: .
    container_name: fastapi_client
    restart: always
    depends_on:
      - db
      - redis
      - kafka
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql+asyncpg://swager:NikFast65@db:5432/swagadb
      - KAFKA_BROKER=kafka:9092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - shared_network

  db:
    image: postgres:15
    container_name: postgres_client_db
    restart: always
    environment:
      POSTGRES_USER: swager 
      POSTGRES_PASSWORD: NikFast65 
      POSTGRES_DB: swagadb 
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shared_network

  redis:
    image: redis:7
    container_name: redis_client
    restart: always
    ports:
      - "6379:6379"
    networks:
      - shared_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_client
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - shared_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_client
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - shared_network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop_client
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      - kafka
    networks:
      - shared_network

networks:
  shared_network:
    external: true

volumes:
  postgres_data: